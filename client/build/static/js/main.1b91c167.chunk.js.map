{
	"version": 3,
	"sources": [
		"components/auth/Register.tsx",
		"components/auth/Login.tsx",
		"components/layout/Navbar.tsx",
		"components/TestCard.tsx",
		"components/Home.tsx",
		"components/About.tsx",
		"components/CreateTest.tsx",
		"components/Landing.tsx",
		"components/Test.tsx",
		"components/NotFound.tsx",
		"App.tsx",
		"serviceWorker.ts",
		"index.tsx"
	],
	"names": [
		"Register",
		"useState",
		"username",
		"password",
		"password2",
		"formData",
		"setFormData",
		"loaded",
		"auth",
		"setAuth",
		"processing",
		"setProcessing",
		"error",
		"setError",
		"onSubmit",
		"e",
		"a",
		"preventDefault",
		"length",
		"axios",
		"post",
		"user",
		"JSON",
		"stringify",
		"data",
		"response",
		"onChange",
		"target",
		"name",
		"value",
		"to",
		"className",
		"type",
		"placeholder",
		"Login",
		"info",
		"setInfo",
		"useEffect",
		"getUser",
		"get",
		"Navbar",
		"history",
		"useHistory",
		"logout",
		"push",
		"id",
		"href",
		"onClick",
		"TestCard",
		"title",
		"language",
		"date",
		"Home",
		"loading",
		"setLoading",
		"tests",
		"setTests",
		"getTests",
		"res",
		"reverse",
		"console",
		"log",
		"map",
		"test",
		"key",
		"_id",
		"About",
		"CreateEvent",
		"description",
		"Date",
		"toLocaleDateString",
		"files",
		"baseFiles",
		"uploading",
		"setUploading",
		"progress",
		"setProgess",
		"setFiles",
		"setBaseFiles",
		"testID",
		"setTestID",
		"el",
		"React",
		"useRef",
		"file",
		"fd",
		"FormData",
		"append",
		"i",
		"headers",
		"onUploadProgress",
		"progressEvent",
		"pct",
		"Math",
		"round",
		"total",
		"then",
		"catch",
		"err",
		"ref",
		"arr",
		"concat",
		"hidden",
		"multiple",
		"index",
		"ProgressBar",
		"variant",
		"now",
		"Landing",
		"Test",
		"match",
		"setTest",
		"results",
		"setResults",
		"elements",
		"setElements",
		"getTest",
		"params",
		"label",
		"css",
		"color",
		"pair",
		"red",
		"file1Percentage",
		"file2Percentage",
		"source",
		"file1",
		"file2",
		"style",
		"lineColor",
		"deleteTest",
		"delete",
		"alert",
		"window",
		"confirm",
		"marginBottom",
		"scope",
		"result",
		"linesMatched",
		"zoomingEnabled",
		"width",
		"innerWidth",
		"height",
		"innerHeight",
		"paddingLeft",
		"paddingRight",
		"marginLeft",
		"marginRight",
		"display",
		"layout",
		"NotFound",
		"textAlign",
		"App",
		"exact",
		"path",
		"component",
		"CreateTest",
		"defaults",
		"withCredentials",
		"Boolean",
		"location",
		"hostname",
		"ReactDOM",
		"render",
		"document",
		"getElementById",
		"navigator",
		"serviceWorker",
		"ready",
		"registration",
		"unregister",
		"message"
	],
	"mappings": "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",
	"file": "static/js/main.1b91c167.chunk.js",
	"sourcesContent": [
		"import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport axios from 'axios';\n\nexport default function Register() {\n\n    const [formData, setFormData] = useState({ username: '', password: '', password2: '', });\n    const { username, password, password2 } = formData;\n\n    const [auth, setAuth] = useState({ username: \"\", loaded: false })\n\n    const [processing, setProcessing] = useState(false)\n\n    const [error, setError] = useState(\"\")\n\n    const onSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n\n        if (username === \"\" || password === \"\" || password2 === \"\") return setError('Please enter all fields')\n        if (password !== password2) return setError(\"Passwords don't match\")\n        if (password.length < 6) return setError(\"Password must be at least 6 characters long\")\n\n        setProcessing(true)\n        try {\n            const user = await axios.post(\n                '/api/auth/register',\n                { username, password }\n            );\n            setAuth({ username: JSON.stringify(user.data.username), loaded: true })\n        } catch (err) {\n            setError(err.response.data)\n        }\n        setProcessing(false)\n    };\n\n    const onChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\n        e.preventDefault();\n        setFormData({ ...formData, [e.target.name]: e.target.value });\n    };\n\n    if (auth.loaded && auth.username) {\n        return <Redirect to=\"/home\" />;\n    }\n\n    return (\n        <div className=\"form-container\">\n            <h2>Sign Up</h2>\n\n            <form onSubmit={(e) => onSubmit(e)}>\n                <div className=\"form-group\">\n                    <label>Username</label>\n\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        name=\"username\"\n                        placeholder=\"Enter username\"\n                        value={username}\n                        onChange={(e) => onChange(e)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input\n                        type=\"password\"\n                        className=\"form-control\"\n                        name=\"password\"\n                        placeholder=\"Password\"\n                        value={password}\n                        onChange={(e) => onChange(e)}\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Confirm Password</label>\n                    <input\n                        type=\"password\"\n                        className=\"form-control\"\n                        name=\"password2\"\n                        placeholder=\"Password\"\n                        value={password2}\n                        onChange={(e) => onChange(e)}\n                    />\n                </div>\n                <button type=\"submit\" className=\"btn btn-outline-danger\">\n                    Submit\n                </button>\n            </form>\n\n\n            {error !== \"\" && <div className=\"error-text\"> {error} </div>}\n\n            <div className=\"link\">\n                <p>\n                    Already have an account? <Link to=\"/login\">Log In</Link>\n                </p>\n            </div>\n\n            {processing &&\n                <div>\n                    <div className=\"spinner\">\n                        <div className=\"bounce1\"></div>\n                        <div className=\"bounce2\"></div>\n                        <div className=\"bounce3\"></div>\n                    </div>\n                </div>\n            }\n        </div>\n    );\n}\n",
		"import React, { useState, useEffect } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport axios from 'axios';\n\n\nexport default function Login() {\n    const [formData, setFormData] = useState({ username: '', password: '', });\n    const { username, password } = formData;\n\n    const [auth, setAuth] = useState({ username: \"\", loaded: false })\n\n    const [processing, setProcessing] = useState(false)\n\n    const [error, setError] = useState(\"\")\n    const [info, setInfo] = useState(\"\")\n\n    useEffect(() => {\n        getUser();\n    }, []);\n\n    const onSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n\n        if (username === \"\" || password === \"\") return setInfo('Please enter all fields')\n\n        setProcessing(true)\n        try {\n            await axios.post('/api/auth/login', { username, password });\n            if (! await getUser()) setError('Wrong username or password')\n            setProcessing(false)\n        } catch (err) {\n            setError(err.response.data)\n        }\n        setProcessing(false)\n    };\n\n    const onChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\n        e.preventDefault();\n        setFormData({ ...formData, [e.target.name]: e.target.value });\n    };\n\n    const getUser = async () => {\n        try {\n            const user = await axios.get('/api/auth/user');\n            setAuth({ username: JSON.stringify(user.data), loaded: true })\n        } catch (_) {\n            setAuth({ username: \"\", loaded: true })\n            return false\n        }\n    };\n\n\n    if (auth.loaded && auth.username) {\n        return <Redirect to=\"/home\" />;\n    }\n\n    return (\n        <div className=\"form-container\">\n            <h2>Log In</h2>\n\n            <form onSubmit={(e) => onSubmit(e)}>\n                <div className=\"form-group\">\n                    <label>Username</label>\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        name=\"username\"\n                        placeholder=\"Enter username\"\n                        value={formData.username}\n                        onChange={(e) => onChange(e)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input\n                        type=\"password\"\n                        className=\"form-control\"\n                        name=\"password\"\n                        placeholder=\"Password\"\n                        value={formData.password}\n                        onChange={(e) => onChange(e)}\n                    />\n                </div>\n                <button type=\"submit\" className=\"btn btn-outline-danger\">\n                    Submit\n                </button>\n            </form>\n\n            {error !== \"\" && <div className=\"error-text\"> {error} </div>}\n\n            {info !== \"\" && <div className=\"info-text\"> {info} </div>}\n\n            <div className=\"link\">\n                <p>\n                    Don't have an account? <Link to=\"/register\">Register</Link>\n                </p>\n            </div>\n\n            {processing &&\n                <div>\n                    <div className=\"spinner\">\n                        <div className=\"bounce1\"></div>\n                        <div className=\"bounce2\"></div>\n                        <div className=\"bounce3\"></div>\n                    </div>\n                </div>\n            }\n\n        </div>\n    );\n}\n",
		"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useHistory } from \"react-router-dom\";\nimport axios from 'axios';\nimport { ReactElement } from 'react';\n\ninterface Props {\n    username: String\n}\n\nexport default function Navbar({ username }: Props): ReactElement {\n    const history = useHistory();\n\n    const logout = async () => {\n        await axios.get('/api/auth/logout')\n        history.push('/')\n    }\n\n    const about = () => {\n        history.push('/about')\n    }\n    return (\n        <nav>\n            <div className=\"nav-wrapper\">\n                <Link to=\"/home\"><p className=\"brand-logo\">Plagiat</p></Link>\n                <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n                    <li className=\"username\">Hello, {username}!</li>\n                    <li><a href=\"#!\" onClick={about}>About Moss</a></li>\n                    <li><a href=\"#!\" onClick={logout}>Log Out</a></li>\n                </ul>\n            </div>\n        </nav>\n    );\n}\n",
		"import React, { ReactElement } from 'react'\nimport { Link } from 'react-router-dom';\n\ninterface Props {\n    id: string,\n    title: string\n    language: string,\n    date: string\n}\n\nexport default function TestCard({ id, title, language, date }: Props): ReactElement {\n\n    return (\n        <div className=\"card\">\n            <div className=\"card-body\">\n                <h5 className=\"card-title\">{title}</h5>\n                <p className=\"card-text\">{language}</p>\n                <p>{date}</p>\n                <div className=\"button-stack\">\n                    <Link to={`/tests/${id}`}>\n                        <div className=\"btn btn-outline-info inline\">\n                            Results\n                        </div>\n                    </Link>\n                </div>\n            </div>\n        </div >\n    )\n}",
		"import React, { useState, useEffect, ReactElement } from 'react';\nimport axios from 'axios'\nimport { Link, Redirect } from 'react-router-dom';\n\nimport Navbar from './layout/Navbar';\nimport TestCard from './TestCard'\n\n\nexport default function Home(): ReactElement {\n\n    const [auth, setAuth] = useState({ username: \"\", loaded: false })\n    const [loading, setLoading] = useState(true)\n    const [tests, setTests] = useState([])\n\n    useEffect(() => {\n        getUser()\n        getTests();\n    }, []);\n\n    const getUser = async () => {\n        try {\n            const user = await axios.get('/api/auth/user');\n            setAuth({ username: user.data.username, loaded: true })\n        } catch (_) {\n            setAuth({ username: \"\", loaded: true })\n        }\n    };\n\n    const getTests = async () => {\n        try {\n            const res = await axios.get('/api/tests/');\n            setTests(res.data.reverse())\n        } catch (err) {\n            console.log(err);\n        }\n        setLoading(false)\n    };\n\n\n    if (auth.loaded && !auth.username) return <Redirect to=\"/\" />;\n\n    return (\n        <div>\n            <Navbar username={auth.username} />\n            <div className=\"center-container\">\n                <h4>Your Tests</h4>\n                <Link to=\"/new-test\">\n                    <button type=\"button\" className=\"btn btn-dark\">\n                        New test\n                    </button>\n                </Link>\n                {loading ?\n                    (\n                        <div className=\"link\">\n                            <div className=\"spinner\">\n                                <div className=\"bounce1\"></div>\n                                <div className=\"bounce2\"></div>\n                                <div className=\"bounce3\"></div>\n                            </div>\n                        </div>\n                    )\n                    :\n                    (\n                        tests.map((test: any) => {\n                            return <TestCard key={test._id}\n                                id={test._id}\n                                title={test.title}\n                                language={test.language}\n                                date={test.date}\n                            />\n                        })\n                    )\n                }\n            </div>\n        </div>\n    )\n}\n",
		"import React, { ReactElement, useState, useEffect } from 'react'\nimport { Redirect, Link } from 'react-router-dom'\n\nimport Navbar from './layout/Navbar'\n\nimport axios from 'axios'\n\nexport default function About(): ReactElement {\n\n    const [auth, setAuth] = useState({ username: \"\", loaded: false })\n\n    useEffect(() => {\n        getUser()\n    }, []);\n\n    const getUser = async () => {\n        try {\n            const user = await axios.get('/api/auth/user');\n            setAuth({ username: user.data.username, loaded: true })\n        }\n        catch (error) {\n            console.log(error);\n            setAuth({ username: \"\", loaded: true })\n        }\n    };\n\n    if (auth.loaded && !auth.username) {\n        return <Redirect to=\"/\" />;\n    }\n\n    return (\n        <div>\n            <Navbar username={auth.username} />\n\n            <div className=\"about-container\">\n                <h4>What is Moss?</h4>\n\n                <p>\"Moss (for a Measure Of Software Similarity) is an automatic system for determining the\n                similarity of programs. To date, the main application of Moss has been in detecting\n                plagiarism in programming classes. Since its development in 1994, Moss has been very\n                effective in this role. The algorithm behind moss is a significant improvement over other\n                cheating detection algorithms (at least, over those known to us).\"</p>\n\n\n                <h4>What is Moss not?</h4>\n\n                <p>\"Moss is not a system for completely automatically detecting plagiarism.\n                Plagiarism is a statement that someone copied code deliberately without attribution,\n                and while Moss automatically detects program similarity, it has no way of knowing why\n                codes are similar. It is still up to a human to go and look at the parts of the code that\n                Moss highlights and make a decision about whether there is plagiarism or not. One way of\n                thinking about what Moss provides is that it saves teachers and teaching staff a lot of\n                time by pointing out the parts of programs that are worth a more detailed examination.\n                But once someone has looked at those portions of the programs, it shouldn't matter whether\n                the suspect code was first discovered by Moss or by a human; the case that there was\n                plagiarism should stand on its own. In particular, it is a misuse of Moss to rely\n                solely on the similarity scores. These scores are useful for judging the relative amount\n                of matching between different pairs of programs and for more easily seeing which pairs of\n                programs stick out with unusual amounts of matching. But the scores are certainly not a\n                proof of plagiarism. Someone must still look at the code.\"</p>\n\n                <p>Read more at: https://theory.stanford.edu/~aiken/moss/</p>\n\n                <h4>Getting started</h4>\n\n                <p> Get started by <Link to=\"/new-test\">creating a new test</Link> and uploading some files you'd like to check. You can also supply 'base-files',\n                which contain code that will not be counted when checking for similarities.\n                When adding files, please make sure they all have unique names.</p>\n\n                <h4>Reading the results</h4>\n                <p>From the official description:</p>\n                <p> \"Lines Matched is approximately the number of lines of code that matched. Each file is also\n                given a percentage score, which is the the percentage of the code in one file considered to\n                    match code in the other file. For both measures, higher numbers mean more code matches.\"</p>\n\n            </div>\n\n        </div>\n    )\n}\n",
		"import React, { useState, useEffect, ReactElement } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { ProgressBar } from 'react-bootstrap'\n\nimport Navbar from './layout/Navbar'\n\nimport axios from 'axios'\n\n\nexport default function CreateEvent(): ReactElement {\n\n    const [auth, setAuth] = useState({ username: \"\", loaded: false })\n    const [formData, setFormData] = useState({ title: '', description: '', language: 'c', date: new Date().toLocaleDateString(), files: [] as any, baseFiles: [] as any });\n\n    const [processing, setProcessing] = useState(false)\n    const [uploading, setUploading] = useState(false)\n    const [progress, setProgess] = useState(0);\n\n    const [error, setError] = useState(\"\")\n\n    const [files, setFiles] = useState([] as any)\n    const [baseFiles, setBaseFiles] = useState([] as any)\n    const [testID, setTestID] = useState(\"\")\n\n    const { title, description, language } = formData;\n    const el = React.useRef<HTMLInputElement>(null);\n\n    useEffect(() => {\n        getUser();\n    }, []);\n\n    const onChange = async (e: React.ChangeEvent<HTMLInputElement> | React.ChangeEvent<HTMLTextAreaElement> |\n        React.ChangeEvent<HTMLSelectElement>) => {\n        e.preventDefault();\n        if (uploading || processing) return;\n        setFormData({ ...formData, [e.target.name]: e.target.value });\n    };\n\n    const getUser = async () => {\n        try {\n            const user = await axios.get('/api/auth/user');\n            setAuth({ username: user.data.username, loaded: true })\n        } catch (_) {\n            setAuth({ username: \"\", loaded: true })\n        }\n    };\n\n\n    const onSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n\n        if (uploading || processing) return;\n\n        if (files.length < 2) return setError('Please select at least 2 files to compare');\n\n        // Add files\n\n        for (const file of files) {\n            formData.files.push(file.name)\n        }\n\n        const fd = new FormData();\n\n        formData.files = files.map((file: any) => file.name)\n        formData.baseFiles = baseFiles.map((file: any) => file.name)\n\n        fd.append('form', JSON.stringify(formData))\n\n        for (let i = 0; i < baseFiles.length; i++) {\n            fd.append(`basefile ${i}`, baseFiles[i]);\n        }\n        for (let i = 0; i < files.length; i++) {\n            fd.append(`file ${i}`, files[i]);\n        }\n\n\n        // Upload files\n\n        setUploading(true)\n\n        axios.post(`/api/tests/`,\n            fd, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            },\n            onUploadProgress: (progressEvent) => {\n                var pct = Math.round((progressEvent.loaded * 100) / progressEvent.total)\n                if (pct === 100) {\n                    setUploading(false)\n                    setProcessing(true)\n                }\n                setProgess(pct);\n            }\n        }).then(function (res) {\n            setTestID(res.data)\n            setUploading(false)\n        }).catch(function (err) {\n            setError(err.response.data)\n            setUploading(false)\n            setProcessing(false)\n        });\n    };\n\n\n    const addFiles = (e: any) => {\n        let arr: File[] = []\n        for (var i = 0; i < e.target.files.length; i++) {\n            for (const file of files) {\n                if (file.name === e.target.files[i].name) {\n                    return console.log('Please make sure all uploaded files have unique names.');\n                }\n            }\n            arr.push(e.target.files[i])\n        }\n        setFiles(files.concat(arr))\n    }\n\n    const addBaseFiles = (e: any) => {\n        let arr: File[] = []\n        for (var i = 0; i < e.target.files.length; i++) {\n            arr.push(e.target.files[i])\n        }\n        setBaseFiles(baseFiles.concat(arr))\n    }\n\n    if (auth.loaded && !auth.username) return <Redirect to=\"/\" />;\n    if (testID !== \"\") return <Redirect to={`/tests/${testID}`} />\n\n    return (\n        <div>\n\n            <Navbar username={auth.username} />\n\n            <div className=\"parent\">\n                <div className=\"div1\">\n                    <h2>Create test</h2>\n                    <form onSubmit={(e) => onSubmit(e)}>\n                        <div className=\"form-group\">\n                            <label>Title</label>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                name=\"title\"\n                                placeholder=\"Enter title\"\n                                value={title}\n                                onChange={(e) => onChange(e)}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label>Description</label>\n                            <textarea\n                                className=\"form-control\"\n                                name=\"description\"\n                                placeholder=\"Enter description\"\n                                value={description}\n                                onChange={(e) => onChange(e)}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label>Language</label>\n                            <select className=\"form-control\" name=\"language\" value={language} onChange={(e) => onChange(e)}>\n                                <option value=\"c\">c</option>\n                                <option value=\"cc\">cc</option>\n                                <option value=\"java\">java</option>\n                                <option value=\"ml\">ml</option>\n                                <option value=\"pascal\">pascal</option>\n                                <option value=\"ada\">ada</option>\n                                <option value=\"lisp\">lisp</option>\n                                <option value=\"scheme\">scheme</option>\n                                <option value=\"haskell\">haskell</option>\n                                <option value=\"fortran\">fortran</option>\n                                <option value=\"ascii\">ascii</option>\n                                <option value=\"vhdl\">vhdl</option>\n                                <option value=\"verilog\">verilog</option>\n                                <option value=\"perl\">perl</option>\n                                <option value=\"matlab\">matlab</option>\n                                <option value=\"python\">python</option>\n                                <option value=\"mips\">mips</option>\n                                <option value=\"prolog\">prolog</option>\n                                <option value=\"spice\">spice</option>\n                                <option value=\"vb\">vb</option>\n                                <option value=\"csharp\">csharp</option>\n                                <option value=\"modula2\">modula2</option>\n                                <option value=\"a8086\">a8086</option>\n                                <option value=\"javascript\">javascript</option>\n                                <option value=\"plsql\">plsql</option>\n                            </select>\n                        </div>\n\n                        <div className={`button-labels` + (uploading || processing ? ` fadeOut` : ``)} >\n                            <label className={`btn btn-outline-info`}>\n                                Add files <input type=\"file\" ref={el} onChange={addFiles} hidden multiple />\n                            </label>\n\n                            <label className={`btn btn-outline-info`}>\n                                Add base-files <input type=\"file\" ref={el} onChange={addBaseFiles} hidden multiple />\n                            </label>\n\n                            <label className={`btn btn-outline-danger`}>\n                                Submit <input type=\"submit\" hidden />\n                            </label>\n\n                            {error !== \"\" && <div className=\"error-text\"> {error} </div>}\n\n                        </div>\n\n                    </form>\n                </div>\n\n                <div className=\"div2\">\n                    <div className=\"files\">\n                        {files.length + baseFiles.length > 0 &&\n                            <div className={(uploading || processing ? `fadeOut` : ``)}>\n                                <h5>selected files</h5>\n                                <ul className=\"list-group\">\n                                    {files.map((value: any, index: number) => {\n                                        return <li key={index} className=\"list-group-item\">{value.name}</li>\n                                    })}\n                                </ul>\n                            </div>\n                        }\n                    </div>\n                </div>\n\n                <div className=\"div3\">\n                    <div className=\"base-files\">\n                        {files.length + baseFiles.length > 0 &&\n                            <div className={(uploading || processing ? `fadeOut` : ``)}>\n                                <h5>selected base-files</h5>\n                                <ul className=\"list-group\">\n                                    {baseFiles.map((value: any, index: number) => {\n                                        return <li key={index} className=\"list-group-item\">{value.name}</li>\n                                    })}\n                                </ul>\n                            </div>\n                        }\n                    </div>\n                </div>\n\n                {uploading &&\n                    <div className=\"div4\">\n                        <h5>uploading files...</h5>\n                        <ProgressBar variant=\"info\" now={progress} />\n                    </div>\n                }\n                {processing &&\n                    <div className=\"div4\">\n                        <div className=\"spinner\">\n                            <div className=\"bounce1\"></div>\n                            <div className=\"bounce2\"></div>\n                            <div className=\"bounce3\"></div>\n                        </div>\n                    </div>\n                }\n            </div>\n        </div>\n    )\n}\n",
		"import React, { ReactElement } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function Landing(): ReactElement {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <h1>Plagiat</h1>\n                <div className=\"btn-group-vertical\">\n                    <Link to=\"/login\">\n                        <button type=\"button\" className=\"btn btn-dark\">\n                            Log In\n                        </button>\n                    </Link>\n                </div>\n                <div className=\"btn-group-vertical\">\n                    <Link to=\"/register\">\n                        <button type=\"button\" className=\"btn btn-dark\">\n                            Register\n                        </button>\n                    </Link>\n                </div>\n            </header>\n        </div>\n    );\n}\n",
		"import React, { useState, useEffect, ReactElement } from 'react';\nimport axios from 'axios'\nimport { Redirect } from 'react-router-dom';\nimport { useHistory } from \"react-router-dom\";\n\nimport Navbar from './layout/Navbar';\n\nimport CytoscapeComponent from 'react-cytoscapejs';\n\ninterface Result {\n    file1: string,\n    file1Percentage: number,\n    file2: string,\n    file2Percentage: number,\n    linesMatched: number\n}\n\ninterface Props {\n    match: any\n}\n\nexport default function Test({ match }: Props): ReactElement {\n    const history = useHistory()\n\n    const [auth, setAuth] = useState({ username: \"\", loaded: false })\n    const [loading, setLoading] = useState(true)\n    const [test, setTest] = useState({} as any)\n    const [results, setResults] = useState<Result[]>([])\n    const [elements, setElements] = useState<any[]>([])\n\n    useEffect(() => {\n        getUser()\n        getTest();\n    }, []);\n\n    const getUser = async () => {\n        try {\n            const user = await axios.get('/api/auth/user');\n            setAuth({ username: user.data.username, loaded: true })\n        } catch (_) {\n            setAuth({ username: \"\", loaded: true })\n        }\n    };\n\n\n    const getTest = async () => {\n        try {\n            const res = await axios.get(`/api/tests/${match.params.testID}`)\n            setTest(res.data)\n            setResults(res.data.results)\n\n            // Set data for graph\n            if (res.data.results.length > 0) {\n                let arr = []\n                for (var i = 0; i < res.data.files.length; i++) {\n                    arr.push({ data: { id: res.data.files[i], label: res.data.files[i] }, css: { color: `rgb(240,240,240)` } });\n                }\n                for (var i = 0; i < res.data.results.length; i++) {\n                    const pair = res.data.results[i]\n                    const red = (255 * ((pair.file1Percentage + pair.file2Percentage) / 200))\n                    arr.push({\n                        data: { source: pair.file1, target: pair.file2 }, style: {\n                            lineColor: `rgb(${red},0,0)`\n                        }\n                    });\n                }\n\n                setElements(arr)\n            }\n        } catch (err) {\n            console.log(err);\n        }\n\n        setLoading(false)\n    };\n\n    const deleteTest = async () => {\n        try {\n            await axios.delete(`/api/tests/${match.params.testID}`);\n            history.push('/home')\n        } catch (err) {\n            alert(err.response.data)\n        }\n    }\n\n\n    if (auth.loaded && !auth.username) return <Redirect to=\"/\" />;\n    if (!loading && !test.files) return <Redirect to=\"/NotFound\" />\n\n    return (\n        <div>\n            <Navbar username={auth.username} />\n            {loading && (\n                <div className=\"link\">\n                    <div className=\"spinner\">\n                        <div className=\"bounce1\"></div>\n                        <div className=\"bounce2\"></div>\n                        <div className=\"bounce3\"></div>\n                    </div>\n                </div>)\n            }\n            {!loading &&\n                <div>\n                    <div className=\"dark-background center-container\">\n                        <h3>{test.title}</h3>\n                        <p>{test.description}</p>\n                        <button className=\"btn btn-outline-danger button-margin\" onClick={() => {\n                            if (window.confirm('Are you sure you wish to delete this item?'))\n                                deleteTest()\n                        }}>\n                            Delete Test\n                        </button>\n                    </div>\n                    <div className=\"parent-test\">\n                        <div className=\"div1-test\">\n                            <h4>Files</h4>\n                            <ul className=\"list-group\">\n                                {test.files.map((value: any, index: number) => {\n                                    return <li key={index} className=\"list-group-item\">{value}</li>\n                                })}\n                            </ul>\n                        </div>\n                        <div className=\"div2-test\">\n                            <h4>Base-files</h4>\n                            <ul className=\"list-group\">\n                                {test.baseFiles.map((value: any, index: number) => {\n                                    return <li key={index} className=\"list-group-item\">{value}</li>\n                                })}\n                            </ul>\n                        </div>\n                        <div className=\"div3-test\">\n                            <h4 style={{ marginBottom: '5%' }}>Results</h4>\n\n                            {results.length > 0 && (\n                                <table className=\"table table-dark\">\n                                    <thead>\n                                        <tr>\n                                            <th scope=\"col\">#</th>\n                                            <th scope=\"col\">File 1</th>\n                                            <th scope=\"col\">File 1 %</th>\n                                            <th scope=\"col\">File 2</th>\n                                            <th scope=\"col\">File 2 %</th>\n                                            <th scope=\"col\">Lines matched</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {results.map((result: Result, index: number) => {\n                                            return (<tr key={index}>\n                                                <th scope=\"row\">{index}</th>\n                                                <td>{result.file1}</td>\n                                                <td>{result.file1Percentage}</td>\n                                                <td>{result.file2}</td>\n                                                <td>{result.file2Percentage}</td>\n                                                <td>{result.linesMatched}</td>\n                                            </tr>)\n                                        })}\n                                    </tbody>\n                                </table>\n                            ) || (<h5 style={{ color: `rgb(0, 190, 100)` }}>No similarities found!</h5>)}\n\n\n                        </div>\n                    </div>\n\n                    {results.length > 0 &&\n\n                        <div className=\"graph-container\">\n                            <CytoscapeComponent elements={elements} zoomingEnabled={false}\n                                style={{\n                                    width: window.innerWidth / 2, height: window.innerHeight / 2,\n                                    paddingLeft: 0,\n                                    paddingRight: 0,\n                                    marginLeft: 'auto',\n                                    marginRight: 'auto',\n                                    display: 'block',\n                                }} layout={{ name: 'circle' }} />\n                        </div>\n                    }\n\n                </div>\n            }\n        </div>\n    )\n}",
		"import React, { useState, useEffect, ReactElement } from 'react';\nimport { Redirect } from 'react-router-dom'\nimport Navbar from './layout/Navbar';\n\nimport axios from 'axios'\n\n\nexport default function NotFound(): ReactElement {\n\n    const [auth, setAuth] = useState({ username: \"\", loaded: false })\n\n    useEffect(() => {\n        getUser()\n    }, []);\n\n    const getUser = async () => {\n        try {\n            const user = await axios.get('/api/auth/user');\n            setAuth({ username: user.data, loaded: true })\n        } catch (_) {\n            setAuth({ username: \"\", loaded: true })\n        }\n    };\n\n    if (auth.loaded && !auth.username) {\n        return <Redirect to=\"/\" />;\n    }\n\n    return (\n        <div>\n            <Navbar username={auth.username} />\n            <div style={{ textAlign: 'center' }}>\n                <h1>404</h1>\n            </div>\n        </div>\n    );\n}\n",
		"import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport axios from 'axios'\n\nimport './App.css';\nimport './bootstrap.css';\nimport './materialize.css'\n\nimport Register from './components/auth/Register';\nimport Login from './components/auth/Login';\nimport Home from './components/Home';\nimport About from './components/About'\nimport CreateTest from './components/CreateTest';\nimport Landing from './components/Landing';\nimport Test from './components/Test';\nimport NotFound from './components/NotFound';\n\n\naxios.defaults.headers = { 'Content-Type': 'application/json' }\naxios.defaults.withCredentials = true\n\nexport default function App() {\n    return (\n        <Router>\n            <Switch>\n                <Route exact path=\"/\" component={Landing} />\n                <Route exact path=\"/register\" component={Register} />\n                <Route exact path=\"/login\" component={Login} />\n                <Route exact path=\"/home\" component={Home} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/new-test\" component={CreateTest} />\n                <Route exact path=\"/tests/:testID\" component={Test} />\n                <Route component={NotFound} />\n            </Switch>\n        </Router>\n    );\n}\n",
		"// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker === null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType !== null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n",
		"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"
	],
	"sourceRoot": ""
}
